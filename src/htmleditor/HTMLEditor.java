/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package htmleditor;

import algoritmen.*;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Rian De Rous
 */
public class HTMLEditor extends javax.swing.JFrame {

   UndoRedo ur = new UndoRedo(50);

    /**
     * Creates new form HTMLEditor
     */
    public HTMLEditor() {

        initComponents();
        ur.addStep("");
        ur.addStep(htmlEditor.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        htmlEditor = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        checkHTMLButton = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();
        redoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        htmlEditor.setColumns(20);
        htmlEditor.setRows(5);
        htmlEditor.setText("<html>\n<body>\n\n<h1>My First Heading</h1>\n\n<p>My first paragraph.</p>\n\n</body>\n</html>");
        htmlEditor.setWrapStyleWord(true);
        htmlEditor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                htmlEditorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                htmlEditorKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(htmlEditor);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        checkHTMLButton.setText("check HTML");
        checkHTMLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkHTMLButtonActionPerformed(evt);
            }
        });
        jPanel2.add(checkHTMLButton);

        undoButton.setText("Undo");
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });
        jPanel2.add(undoButton);

        redoButton.setText("Redo");
        redoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoButtonActionPerformed(evt);
            }
        });
        jPanel2.add(redoButton);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void htmlEditorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_htmlEditorKeyTyped

    }//GEN-LAST:event_htmlEditorKeyTyped

    private void htmlEditorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_htmlEditorKeyReleased
       
       // if(evt.getKeyChar() == '\t' || evt.getKeyChar() == ' '){
            ur.addStep(htmlEditor.getText());
       // }
        
        undoButton.setEnabled(true);
        if (evt.getKeyChar() == '<') {
            tagStartCaret = htmlEditor.getCaretPosition() - 1;
            isATag = true;
            return;
        }
        if (isATag && evt.getKeyChar() == '\t') {
            tagEndCaret = htmlEditor.getCaretPosition();
            try {
                tag = "</" + htmlEditor.getText(tagStartCaret, tagEndCaret - tagStartCaret).substring(1);

            } catch (BadLocationException ex) {

            }
            if (tag.charAt(tag.length() - 2) == '>') {
                htmlEditor.insert("\n\n\r" + tag, tagEndCaret);
                htmlEditor.setCaretPosition(tagEndCaret + 2);
                isATag = false;
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_htmlEditorKeyReleased

    private void checkHTMLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkHTMLButtonActionPerformed
        int tagStartIndex = 0;
        String document = htmlEditor.getText();
        int length = document.length();
        Stack st = new StackLL();
        boolean tagType = true; // true = open, false = closing tag
        boolean succes = true;
        int line = 1;
        int col = 0;

        for (int i = 0; i < length; i++) {

            if (document.charAt(i) == '\n') {
                line++;
                col = 0;
            } else {
                col++;
            }

            if (document.charAt(i) == '<' && document.charAt(i + 1) != '/') {
                tagStartIndex = i;
                tagType = true;
                i++;
            }

            if (document.charAt(i) == '<' && document.charAt(i + 1) == '/') {
                tagStartIndex = i;
                tagType = false;
                i += 2;
            }

            if (document.charAt(i) == '>' && tagType) {
                String tag1 = document.substring(tagStartIndex, i + 1);
                st.push(tag1);
                // System.out.println("found tag: " + tag1 + " from index " + tagStartIndex + " to " + i);
            }

            if (document.charAt(i) == '>' && !tagType) {
                String tag1 = document.substring(tagStartIndex, i + 1);
                if (st.top() == null) {
                    System.out.println("missing opening tag");
                    succes = false;
                } else {
                    if (st.top().equals("<" + tag1.substring(2))) {
                        st.pop();
                        //System.out.println("found closing tag: " + tag1 + "from index" + tagStartIndex + "to " + i);
                    } else {
                        System.out.println("incorrect closing tag " + tag1 + " expected </" + st.top().toString().substring(1) + "at" + line + "," + col);
                        succes = false;
                    }
                }
            }
        }

        if (st.top() == null && succes) {
            System.out.println("succes");
        } else {
            while (st.top() != null) {
                System.out.println("missing tag: </" + st.pop().toString().substring(1));
            }
        }
    }//GEN-LAST:event_checkHTMLButtonActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        redoButton.setEnabled(true);
        if (!ur.undoIsEmpty()) {
            undoButton.setEnabled(true);
            htmlEditor.setText((String)ur.undo());
        } else {
            undoButton.setEnabled(false);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_undoButtonActionPerformed

    private void redoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoButtonActionPerformed
        if (ur.redoIsEmpty()) {
            redoButton.setEnabled(true);
            htmlEditor.setText((String)ur.redo());

        } else {
            redoButton.setEnabled(false);
        }  // TODO add your handling code here:
    }//GEN-LAST:event_redoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HTMLEditor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HTMLEditor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HTMLEditor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HTMLEditor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HTMLEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkHTMLButton;
    private javax.swing.JTextArea htmlEditor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton redoButton;
    private javax.swing.JButton undoButton;
    // End of variables declaration//GEN-END:variables
    private boolean isATag;
    String tag;
    int tagStartCaret, tagEndCaret;

}
